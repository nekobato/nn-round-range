{"version":3,"file":"nn-round-range.js","sourceRoot":"","sources":["src/nn-round-range.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\n\n@customElement('nn-round-range')\nexport class NNRoundRange extends LitElement {\n  protected focusable = true;\n\n  @property({ type: Number }) value: number = 0;\n  @state() isManupulating: boolean = false;\n  @state() rect?: DOMRect;\n  @state() rectCenter?: { x: number; y: number };\n  @query('#container') container?: HTMLElement;\n  @query('#circle') circle?: SVGElement;\n\n  protected radian = (Math.PI / 180) * -90;\n\n  protected onKeydown(e: KeyboardEvent) {\n    console.log('!');\n    if (e.code === 'ArrowRight') {\n      e.preventDefault();\n      this.value += 1;\n    } else if (e.code === 'ArrowLeft') {\n      e.preventDefault();\n      this.value -= 1;\n    }\n  }\n\n  protected onStartManupulate(e: MouseEvent) {\n    e.preventDefault();\n    this.rect = this.container!.getBoundingClientRect();\n    this.rectCenter = {\n      x: this.rect.right - this.rect.width / 2,\n      y: this.rect.bottom - this.rect.height / 2,\n    };\n    this.isManupulating = true;\n  }\n\n  protected onStartManupulateCover(e: MouseEvent) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  protected onManupulating(e: TouchEvent | MouseEvent) {\n    e.preventDefault();\n    if (!this.isManupulating) return;\n\n    const mousePosition = {\n      x:\n        ((e as MouseEvent).clientX || (e as TouchEvent).touches[0].clientX) -\n        this.rectCenter!.x,\n      y:\n        ((e as MouseEvent).clientY || (e as TouchEvent).touches[0].clientY) -\n        this.rectCenter!.y,\n    };\n    const rotatedPosition = {\n      x:\n        mousePosition.x * Math.cos(this.radian) -\n        mousePosition.y * Math.sin(this.radian),\n      y:\n        mousePosition.x * Math.sin(this.radian) +\n        mousePosition.y * Math.cos(this.radian),\n    };\n    this.value =\n      (((Math.atan2(rotatedPosition.y, rotatedPosition.x) * 180) / Math.PI +\n        180) *\n        100) /\n      360;\n\n    this.dispatchEvent(new Event('change'));\n  }\n\n  protected onManulupateend(e: MouseEvent) {\n    e.preventDefault();\n    this.isManupulating = false;\n  }\n\n  updated(props: Map<string, any>) {\n    if (props.has('value')) {\n      this.circle!.style.strokeDasharray = `${Number(this.value) * 10.05} 1005`;\n    }\n  }\n\n  render() {\n    return html`\n      <style>\n        :host {\n          display: inline-flex;\n          position: relative;\n          width: 240px;\n          height: 240px;\n          stroke-width: 4px;\n        }\n        .container {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          width: 100%;\n          height: 100%;\n        }\n        .svg {\n          position: absolute;\n          top: 0;\n          left: 0;\n          transform: rotateZ(-90deg);\n          width: 100%;\n          height: 100%;\n          overflow: visible;\n        }\n        .cover {\n          position: absolute;\n          top: 32px;\n          left: 32px;\n          right: 32px;\n          bottom: 32px;\n          margin: auto;\n          border-radius: 50%;\n        }\n      </style>\n      <div\n        id=\"container\"\n        class=\"container\"\n        @keydown=${this.onKeydown}\n        @mousedown=${this.onStartManupulate}\n        @mousemove=${this.onManupulating}\n        @mouseup=${this.onManulupateend}\n        @touchstart=${this.onStartManupulate}\n        @touchmove=${this.onManupulating}\n        @touchend=${this.onManulupateend}\n        tanindex=\"0\"\n      >\n        <svg class=\"svg\" id=\"svg\" class=\"circle\" viewbox=\"0 0 320 320\">\n          <circle\n            class=\"circle-background\"\n            cx=\"160\"\n            cy=\"160\"\n            r=\"158\"\n            stroke=\"#dddddd\"\n            fill=\"transparent\"\n          />\n          <circle\n            id=\"circle\"\n            class=\"circle\"\n            cx=\"160\"\n            cy=\"160\"\n            r=\"158\"\n            stroke=\"#07b9f5\"\n            stroke-dasharray=\"0 1005\"\n            fill=\"transparent\"\n          />\n        </svg>\n        <div class=\"cover\" @mousedown=${this.onStartManupulateCover}></div>\n        <slot></slot>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'nn-round-range': NNRoundRange;\n  }\n}\n"]}